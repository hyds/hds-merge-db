[version]
Version=1

[merge_tables]
;Specify the tables you want to merge
;Typically you should not perform this task on a production system, but rather on a copy of that system
;In this section you can select a few of the DBF files for merging from your copy of DBFPATH
;Most of the tables are given below as a default, you can simply un/comment them out with ";" if you don't need the table

;CONFIGURTAION 

;DEFAULT
;You will get the default action which is to simply report on clash
;site = 1 

;ACTIONS
;You can specify a set of finite actions that you want the script to perform when it finds a clash
;The actions are essentially your business rules
;In the example below sampno will be increment by one for the results table
;Action options are increment, decrement, append, prepend.
;Example:
;results = {keys:{field:sampno,action:increment,value:1},subordinates:null}

;If you wanted to append some text such as "_merge" to the sampnum field instead of incrementing by 1 you would have,
;results = {keys:{field:"sampno",action:"append",value:"_merge"},subordinates:null}

;ORPHANS
;For the example above, we will have changed the results table with no respect for the samples table. 
;So we have potentially just created orphan records.
;To take care of orphans can simply say that the results table was subordinate to the samples table.
;This way, any changes to SAMPLES.SAMPNUM will cascade down to the RESULTS table
;We could specify such like so:
;Example:
;samples = {keys:[{field:"sampno",action:"increment",value:1}],subordinates:["results"]}

;If this was a groundwater table like GWHOLE you might want to increment the HOLE field by one and cascade this down to all subordinate tables
;Example:
;gwhole = {keys:[{field:"hole",action:"increment",value:1}],subordinates:["gwpipe","hydmeas","hydrlmp","casing","aquifer","drilling"]}

;SITE tables
site 		= 1 ;This means you will get the default action which is to simply report on clash
;station 	= 1
;stnini 		= 1
;bench 		= 1
history 	= { "keys" : [{ "field":"stattime", "action":"increment", "value":1 }] }

;period = 1
;series = 1
;peaktime = 1
;rateper = 1
;ratehed = 1
;ratepts = 1
;rateeqn = 1
;ttabhed = 1
;ttabpts = 1
;gaugings = 1
;gaugmeas = 1
;secthed = 1
;sections = 1
;sectsurv = 1
;stninikw = 1
;vrwewa = 1
;vrwmon = 1

;VARIABLE tables
variable 	= { "keys": [{ "field":"varnum", "action":"increment", "value":1 }], "subordinates":["wqvar","varcon","varsub"] }
varsub 		= 1
wqvar 		= 1
varcon 		= 1

;WQ tables
samples 	= { "keys": [{ "field":"sampnum", "action":"increment", "value":1 }], "subordinates":["results"] }
;results 	= 1

;GW tables
gwhole 		= { "keys": [{ "field":"hole", "action":"increment", "value":1}], "subordinates":["gwpipe","hydmeas","hydrlmp"] }
;gwpipe 		= 1
;hydmeas 	= 1
;hydrlmp 	= 1

[source_tables]
;Specify the systems you want to merge.
;You MUST have a 'base' system which is the one that will be the starting point to which others are compared.
;All other subsection names are arbitrary except for the 'base' subsection name which has a fixed meaning so be careful
;The base system will not be changed, whilst others may be if they clash with the base system
;e.g. base = C:\Temp\RECONCILE\dbf_target\Copy_L
base = C:\Temp\RECONCILE\dbf_target\Copy_L
l_hydx = C:\Temp\RECONCILE\dbf_source\l_hydx
qld_citrix = C:\Temp\RECONCILE\dbf_source\qld_citrix
vic_citrix = C:\Temp\RECONCILE\dbf_source\vic_citrix

;base = C:\temp\systems\systems\L
;vic_citrix = C:\temp\systems\systems\citrix\vic
;qld_citrix = C:\temp\systems\systems\citrix\qld